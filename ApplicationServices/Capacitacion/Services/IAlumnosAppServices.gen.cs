//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Radarc (http://radarc.net) - Radarc version: 4.9.1.22813 Formula: UNIR.1.1 version: 1.1
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. 
//     If you want to extend or modify the code use the designated extension points / user escapes as described in the product documentation.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using Unir.Architecture.SuperTypes.DomainBase;
using Unir.Architecture.SuperTypes.DomainBase.ActionResult;
using Unir.Architecture.SuperTypes.DomainBase.Extensions;
using Unir.Architecture.SuperTypes.ApplicationServicesBase;
using Unir.Architecture.SuperTypes.ApplicationServicesBase.AppServicesUtility;
using Unir.Architecture.SuperTypes.ApplicationServicesBase.Dto;
using Unir.ErpAcademico.ApplicationServices.Capacitacion.Dto.Alumnos;
using Unir.ErpAcademico.ApplicationServices.Capacitacion.Services.Specifications;
using Unir.ErpAcademico.ApplicationServices.Capacitacion.Services.Specifications.Alumnos;

namespace Unir.ErpAcademico.ApplicationServices.Capacitacion.Services
{
    public partial interface IAlumnosAppServices : ICommonApplicationServices
    {
        #region Alumnos
		
        #region Lectura

        /// <summary>
        /// Devuelve una lista Paginada y Filtrada de Alumnos
        /// </summary>
        /// <param name="specification">Especificación de la Consulta.</param>
        /// <returns>La lista resultante.</returns>
        ResultListDto<AlumnoDto> GetPagedAlumnos(AlumnosListSpecification specification);

        /// <summary>
        /// Obtiene la información del Alumno
        /// </summary>
        /// <param name="idAlumno">El identificador del Alumno</param>
        /// <returns>La estructura con la información.</returns>
        ResultSingleDto<AlumnoDto> GetAlumno(int idAlumno);

        #endregion Lectura

        #region Persistencia

        /// <summary>
        /// Añade al sistema de persistencia una nueva instancia de Alumno y
        /// verifica la consistencia de las relaciones
        /// </summary>
        /// <param name="alumno">El objeto alumno con todos los datos requeridos.</param>
        /// <returns>Resultado de la operación incluyendo a los datos del alumno recien persistido, incluyendo su Identificador asignado.</returns>
        ResultSingleDto<AlumnoDto> NewAlumno(AlumnoDto alumno);
		
        /// <summary>
        /// Modifica la información de una instancia de Alumno persistida.
        /// </summary>
        /// <param name="alumno">La información a modificar.</param>
        /// <returns>Resultado de la operación.</returns>
        ResultValidation ModifyAlumno(AlumnoDto alumno);

        /// <summary>
        /// Elimina un Conjunto de Alumnos a partir de sus Ids.
        /// </summary>
        /// <param name="ids">Los Ids.</param>
        /// <returns>Resultado de la Operación, más los ids de los alumnos eliminados.</returns>
        ResultPrimitiveValue<int[]> DeleteAlumnos(int[] ids);

        /// <summary>
        /// Añade una copia exacta de cada uno de los Alumnos representados por los Ids.
        /// </summary>
        /// <param name="ids">Los Ids de los Alumnos</param>
        /// <returns>Resultado de la Operación, mas los ids de los nuevos alumnos resultantes de la clonación</returns>
        ResultPrimitiveValue<int[]> CloneAlumnos(int[] ids);
	
		
        #endregion Persistencia

        #endregion Alumnos
	}
}
