//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Radarc (http://radarc.net) - Radarc version: 4.9.1.22813 Formula: UNIR.1.1 version: 1.1
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. 
//     If you want to extend or modify the code use the designated extension points / user escapes as described in the product documentation.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Unir.ErpAcademico.DataAccessModules.Tests.Utils;
using Unir.ErpAcademico.DataAccessModules.Capacitacion.Repositories;
using Unir.ErpAcademico.DomainModules.Capacitacion.Aggregates.Alumnos;

namespace Unir.ErpAcademico.DataAccessModules.Tests.Utils.Capacitacion
{
    public class AlumnosRepositoryTestUtilBase
    {
        public virtual IAlumnosRepository CreateAlumnosRepository()
        {
            return new AlumnosRepository(MainUnitOfWorkTestUtils.GetUnitOfWork());
        }

        public virtual Alumno CreateAlumno()
        {
            var repoAlumno = CreateAlumnosRepository();
            var alumno = GetAlumno();

            var unitOfWork = repoAlumno.UnitOfWork;
            repoAlumno.Add(alumno);
            unitOfWork.Commit();

            return alumno;            
        }
		
		
        public virtual Alumno GetAlumno()
        {
            var result = new Alumno
			{
				Nombres = Guid.NewGuid().ToString(),
				Apellidos = Guid.NewGuid().ToString(),
				FechaNacimiento = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, DateTime.Now.Hour, DateTime.Now.Minute, 0),
			};

            return result;
        }

        public void RemoveAllAlumnos()
        {
            var repo = CreateAlumnosRepository();
            foreach (var entity in repo.GetFiltered(e => true).GetLazyList())
            {
                repo.Remove(entity);
            }
            repo.UnitOfWork.Commit();
        }
    }
}
